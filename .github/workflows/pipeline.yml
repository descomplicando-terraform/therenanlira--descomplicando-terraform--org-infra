name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform CI/CD'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        if: success() && steps.init.outcome == 'success'
        id: validate
        run: terraform validate

      - name: Terraform Format Check
        if: success() && steps.validate.outcome == 'success'
        id: fmt
        run: terraform fmt -check

      - name: Terraform Plan
        if: success() && steps.fmt.outcome == 'success'
        id: plan
        run: terraform plan -out=tfplan
        continue-on-error: true

      - name: Check for changes
        id: check_changes
        run: |
          terraform plan -detailed-exitcode || true
        continue-on-error: true

      - name: Save Plan Output
        if: steps.check_changes.outcome == 'success'
        run: echo "tfplan" > planfile

      - name: Upload Plan as artifact
        if: steps.check_changes.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan

      - name: Save exit code to file
        run: echo $? > exit_code.txt

      - name: Upload exit code artifact
        uses: actions/upload-artifact@v3
        with:
          name: exit_code
          path: exit_code.txt

  # apply:
  #   name: 'Terraform Apply'
  #   needs: terraform
  #   runs-on: ubuntu-latest
  #   if: always()
  #   defaults:
  #     run:
  #       working-directory: .

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Terraform
  #       uses: hashicorp/setup-terraform@v2

  #     - name: Download Plan artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: tfplan

  #     - name: Download exit code artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: exit_code

  #     - name: Read exit code
  #       id: check_exit_code
  #       run: echo $(cat exit_code.txt)

  #     - name: Terraform Init
  #       run: terraform init

  #     - name: Terraform Apply
  #       if: steps.check_exit_code.outputs == '2'
  #       run: terraform apply -auto-approve tfplan
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
