name: Terraform CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual trigger

jobs:
  plan:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, prod]

    steps:
      - name: Call reusable Terraform workflow
        uses: ./.github/workflows/terraform-common.yml@main
        with:
          environment: ${{ matrix.environment }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

  apply:
    runs-on: ubuntu-latest
    needs: plan

    strategy:
      matrix:
        environment: [dev, prod]

    steps:
      - name: Call reusable Terraform workflow
        uses: ./.github/workflows/terraform-common.yml@main
        with:
          environment: ${{ matrix.environment }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

  destroy:
    runs-on: ubuntu-latest
    needs: apply

    strategy:
      matrix:
        environment: [dev, prod]

    steps:
      - name: Call reusable Terraform workflow
        uses: ./.github/workflows/terraform-common.yml@main
        with:
          environment: ${{ matrix.environment }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
